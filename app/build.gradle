plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    compileSdkVersion 28

    apply plugin: 'com.android.application'
    apply plugin: 'kotlin-android'
    apply plugin: 'kotlin-android-extensions'
    apply plugin: 'kotlin-kapt'
    apply plugin: 'kotlin-allopen'

    defaultConfig {
        applicationId "com.fct.mvvm"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    kotlinOptions.freeCompilerArgs += ["-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi"]
    buildFeatures {
        viewBinding true
    }

    testOptions {
        unitTests.includeAndroidResources = true
    }
}

dependencies {

    // core
    implementation "androidx.core:core-ktx:$androidx_core"
    implementation "androidx.appcompat:appcompat:$androidx_compat"
    implementation "androidx.recyclerview:recyclerview:$androidx_rv"

    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin"

    // rxjava base
    implementation "io.reactivex.rxjava2:rxjava:$rxjava"
    implementation "io.reactivex.rxjava2:rxandroid:$rxjava_android"

    // okhttp3
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp3"
    implementation "com.squareup.okhttp3:okhttp:$okhttp3"

    // retrofit2
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:retrofit-mock:$retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"

    // picasso : http://square.github.io/picasso/
    implementation "com.squareup.picasso:picasso:$picasso"

    // room
    implementation "androidx.room:room-ktx:$kotlin_room"
    kapt "androidx.room:room-compiler:$kotlin_room"
    implementation "androidx.room:room-runtime:$kotlin_room"
    implementation "androidx.room:room-rxjava2:$kotlin_room"

    // design
    implementation "com.google.android.material:material:$android_material"
    implementation "androidx.constraintlayout:constraintlayout:$androidx_constraint"

    // lifecycle components
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle"

    // nav
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation"

    // flipper : for debugging
    debugImplementation "com.facebook.flipper:flipper:$flipper"
    debugImplementation "com.facebook.soloader:soloader:$soloader"

    // testing - required
    testImplementation "junit:junit:$test_junit"
    testImplementation "androidx.test:core:$test_core"
    testImplementation "androidx.test.ext:junit-ktx:$test_ktx"
    testImplementation "androidx.test.ext:truth:$test_truth"
    testImplementation "org.robolectric:robolectric:$test_robolectric"
    testImplementation "io.mockk:mockk:$test_mockk"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttp3"
    testImplementation "androidx.room:room-testing:$kotlin_room"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$test_coroutines"
}